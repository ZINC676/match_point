#!/usr/bin/env python
PACKAGE = "rm_match"
#初始化ROS，并导入参数生成器
from dynamic_reconfigure.parameter_generator_catkin import *
#初始化参数生成器
gen = ParameterGenerator()
#定义需动态配置的参数，格式为
#gen.add(name , type, level, description, default, min, max)
gen.add("rot_x", double_t, 0, "Rotation of x axis",    0, -180.,   180.)
gen.add("rot_y", double_t, 0, "Rotation of y axis",    0, -180.,   180.)
gen.add("rot_z", double_t, 0, "Rotation of z axis",    0, -180.,   180.)
gen.add("trans_x", double_t, 0, "Trans of x axis",    0, -1.,   1)
gen.add("trans_y", double_t, 0, "Trans of y axis",    0, -1.,   1)
gen.add("trans_z", double_t, 0, "Trans of z axis",    0, -1.,   1)
gen.add("pass_x_min", double_t, 0, "passThough in x axis min",   -10, -20,  20)
gen.add("pass_x_max", double_t, 0, "passThough in x axis max",   10, -20,  20)
gen.add("pass_y_min", double_t, 0, "passThough in y axis min",   -10, -20,  20)
gen.add("pass_y_max", double_t, 0, "passThough in y axis max",   10, -20,  20)
gen.add("pass_z_min", double_t, 0, "passThough in z axis min",   -10, -20, 20)
gen.add("pass_z_max", double_t, 0, "passThough in z axis max",   10, -20,  20)
# #生成一个枚举类型的值
# size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
# 					   gen.const("Medium",     int_t, 1, "A medium constant"),
# 					   gen.const("Large",      int_t, 2, "A large constant"),
# 					   gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
# 					   "An enum to set size")
# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

#生成必要文件并退出
exit(gen.generate(PACKAGE, "rm_match_reconfigure", "match"))
